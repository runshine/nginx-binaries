name: nginx_linux
on:
  push:
    # Don't run on version tags (these are used for JS module).
    tags-ignore:
      - 'v**'
    branches:
      - '**'
    paths:
      - .github/workflows/nginx_linux.yml
      - patches/*
      - scripts/*
      - build.sh


env:
  ALPINE_BRANCH: v3.21
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  JOBS: 3
  CFLAGS: -Os -fomit-frame-pointer -pipe
  LINUX_LDFLAGS: -static -Wl,--as-needed -Wl,-Map,linker.map
  DARWIN_LDFLAGS: -Wl,-map,linker.map
  WIN32_LDFLAGS: -Wl,--as-needed -Wl,-Map,linker.map
  # List of extra nginx modules to download.
  # NOTE: nginx/njs is not defined here, but directly in the jobs.
  NGINX_MODULES: >-
    kjdev/nginx-auth-jwt
    kjdev/nginx-keyval
    vision5/ngx_devel_kit
    openresty/echo-nginx-module
    openresty/headers-more-nginx-module
    openresty/set-misc-nginx-module
  # The same as above, but for Windows.
  # - kjdev/nginx-auth-jwt, kjdev/nginx-keyval: a bit complicated to build (TODO)
  NGINX_MODULES_WIN32: >-
    vision5/ngx_devel_kit
    openresty/echo-nginx-module
    openresty/headers-more-nginx-module
    openresty/set-misc-nginx-module
  # Don't update binaries with unchanged sources.
  SKIP_SAME_SOURCES: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        NGINX_VERSION:
          - 1.26.x
          - 1.27.x
          - 1.28.x
        build_arch: [linux/amd64,linux/arm64/v8,linux/arm/v7,linux/arm/v5,linux/riscv64]
        include:
          - build_name: x86_64
            build_arch: linux/amd64
          - build_name: aarch64
            build_arch: linux/arm64/v8
          - build_name: armhf
            build_arch: linux/arm/v7
          - build_name: armel
            build_arch: linux/arm/v5
          - build_name: riscv64
            build_arch: linux/riscv64
          - NJS_VERSION: 0.x.x
          # Pin older njs version for old stable nginx.
          - NGINX_VERSION: 1.26.x
            NJS_VERSION: 0.8.x
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download and extract nginx
        run: ./scripts/fetch-sources -d . nginx/nginx@release-${{ matrix.NGINX_VERSION }}

      - name: Download and extract nginx modules
        run: ./scripts/fetch-sources nginx/njs@${{ matrix.NJS_VERSION }} $NGINX_MODULES

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build binary
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.build_arch }}
          push: false
          tags: local_nginx:latest
          file: Dockerfile
          outputs: |
            type=local,dest=${{ github.workspace }}/output

      - name: List Dir
        run: ls -lRt ${{ github.workspace }}

      - name: Upload binary to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nginx-linux-${{ matrix.build_name }}
          path: ${{ github.workspace }}/output/build/install/bin/*

